framework:
    cache:
        #app: cache.adapter.filesystem
       #pools:
            # creates a "custom_thing.cache" service
            # autowireable via "CacheInterface $customThingCache"
            # uses the "app" cache configuration
            #product.cache:
                #adapter: cache.app
            #my_cache_pool:
                #adapter: cache.adapter.apcu

         # uses the default_memcached_provider from above
            #acme.cache:
                #adapter: cache.adapter.memcached

            # control adapter's configuration
            #foobar.cache:
                #adapter: cache.adapter.memcached
                #provider: 'memcached://user:password@example.com'

            # uses the "foobar.cache" pool as its backend but controls
            # the lifetime and (like all pools) has a separate cache namespace
            #short_cache:
                #adapter: foobar.cache
                #default_lifetime: 60
        # Unique name of your app: used to compute stable namespaces for cache keys.
        #prefix_seed: your_vendor_name/app_name

        # The "app" cache stores to the filesystem by default.
        # The data in this cache should persist between deploys.
        # Other options include:

        # Redis
        #app: cache.adapter.redis
        #default_redis_provider: redis://localhost

        # APCu (not recommended with heavy random-write workloads as memory fragmentation can cause perf issues)
      app: cache.adapter.apcu

        # Namespaced pools use the above "app" backend by default
        #pools:
            #my.dedicated.cache: null
